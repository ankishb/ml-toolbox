{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"out",
				"output_pad"
			],
			[
				"kerne",
				"kernel_init"
			],
			[
				"kere",
				"kernel_size"
			],
			[
				"derp",
				"depth_l2_reg"
			],
			[
				"he",
				"he_normal"
			],
			[
				"le",
				"level"
			],
			[
				"print",
				"print_left_node"
			],
			[
				"prin",
				"print_left_node"
			],
			[
				"right",
				"right_height"
			],
			[
				"left",
				"left_height"
			],
			[
				"strat",
				"start_vertex"
			],
			[
				"start",
				"start_vertex"
			],
			[
				"add",
				"add_edge"
			],
			[
				"DFS",
				"DFSUtil"
			],
			[
				"vect",
				"vector\tstd::vector"
			],
			[
				"prio",
				"priority_queue"
			],
			[
				"mak",
				"make_pair"
			],
			[
				"push",
				"push_back"
			],
			[
				"de",
				"deq"
			],
			[
				"pop",
				"pop_front"
			],
			[
				"re",
				"void_replace_white_spaces"
			],
			[
				"a",
				"arr"
			],
			[
				"size",
				"sizeof"
			],
			[
				"ma",
				"max_steps"
			],
			[
				"reg",
				"reg_name"
			],
			[
				"fill",
				"fillna_flag"
			],
			[
				"vali",
				"valid_df"
			],
			[
				"train",
				"train_df"
			],
			[
				"target",
				"target_col"
			],
			[
				"test",
				"test_df"
			],
			[
				"enco",
				"encoded_train"
			],
			[
				"tra",
				"train_enc"
			],
			[
				"loo",
				"loo_sigma"
			],
			[
				"lea",
				"leave_one_out"
			],
			[
				"bas",
				"basen"
			],
			[
				"su",
				"sum_enc"
			],
			[
				"has",
				"hashing"
			],
			[
				"one",
				"one_hot"
			],
			[
				"tar",
				"target_min_leaf"
			],
			[
				"targ",
				"target_smoothing"
			],
			[
				"hash",
				"hash_comp"
			],
			[
				"col",
				"col_list"
			],
			[
				"svd",
				"svd_component"
			],
			[
				"com",
				"complete_df"
			],
			[
				"toke",
				"token_pattern"
			],
			[
				"x",
				"xvalid_tfv"
			],
			[
				"xtr",
				"xtrain_tfv"
			],
			[
				"cat_c",
				"cat_cols"
			],
			[
				"gri",
				"grid_search"
			],
			[
				"sc",
				"score_func"
			],
			[
				"mean",
				"mean_target"
			],
			[
				"va",
				"val_idx"
			],
			[
				"random",
				"random_state"
			],
			[
				"down",
				"download_weights"
			],
			[
				"model",
				"model_name"
			],
			[
				"Res",
				"ResNet50"
			],
			[
				"Resne",
				"ResNet50V2"
			],
			[
				"Den",
				"DenseNet121"
			],
			[
				"Mo",
				"MobileNetV2"
			],
			[
				"resnet",
				"resnet_v2"
			],
			[
				"c",
				"command"
			],
			[
				"cat",
				"categorical"
			],
			[
				"numerica",
				"numerical_columns"
			],
			[
				"in",
				"int_cols"
			],
			[
				"part",
				"partition_flag"
			],
			[
				"dice",
				"dice_coef_loss"
			],
			[
				"tru",
				"true_idxs"
			],
			[
				"labe",
				"label_batch"
			],
			[
				"image",
				"image_batch"
			],
			[
				"num",
				"num_train"
			],
			[
				"file",
				"filename_queue"
			],
			[
				"all",
				"all_filenames"
			],
			[
				"sampled",
				"sampled_character_folders"
			],
			[
				"dim",
				"dim_output"
			],
			[
				"full",
				"full_name_special"
			],
			[
				"class",
				"class_name"
			],
			[
				"save",
				"savefig"
			],
			[
				"sav",
				"save_d_loss"
			],
			[
				"data",
				"data_B"
			],
			[
				"batch",
				"batch_size"
			],
			[
				"bat",
				"batch_size"
			],
			[
				"recon",
				"recon_horse"
			],
			[
				"g_",
				"g_grads"
			],
			[
				"app",
				"apply_gradients"
			],
			[
				"gen",
				"gen_h2z_vars"
			],
			[
				"ge",
				"gen_loss"
			],
			[
				"dis",
				"dis_horses_loss"
			],
			[
				"d_",
				"d_optimizer"
			],
			[
				"Tr",
				"TRAINABLE_VARIABLES"
			],
			[
				"rec",
				"recon_loss_z"
			],
			[
				"disc_",
				"disc_h_fake"
			],
			[
				"batc",
				"batch_zebra"
			],
			[
				"disc",
				"discriminator_horses"
			],
			[
				"gene",
				"generator_h2z"
			],
			[
				"batch_",
				"batch_zebra"
			],
			[
				"as",
				"asarray"
			],
			[
				"pil_",
				"pil_B_shape"
			],
			[
				"dat",
				"data_dir"
			],
			[
				"weigh",
				"weights_d"
			],
			[
				"reduce",
				"reduce_sum"
			],
			[
				"G_BA",
				"G_BA_loss"
			],
			[
				"G_AB",
				"G_AB_loss"
			],
			[
				"D_B",
				"D_B_real"
			],
			[
				"D_A",
				"D_A_fake"
			],
			[
				"G_",
				"G_AB"
			],
			[
				"D_",
				"D_A_b1"
			],
			[
				"D",
				"D_B_w1"
			],
			[
				"impo",
				"import_path"
			],
			[
				"square",
				"square_result"
			],
			[
				"th",
				"threading"
			],
			[
				"cal",
				"calc_cube"
			],
			[
				"cal_",
				"calc_square"
			],
			[
				"tot",
				"total_r"
			],
			[
				"trainabl",
				"trainable_variables"
			],
			[
				"criti",
				"critic_net"
			],
			[
				"actor",
				"actor_net"
			],
			[
				"w_b",
				"w_b_list"
			],
			[
				"w",
				"w_b_list"
			],
			[
				"Cri",
				"CriticNet"
			],
			[
				"Glo",
				"GLOBAL_VARIABLES"
			],
			[
				"update",
				"update_ops"
			],
			[
				"U",
				"UPDATE_OPS"
			],
			[
				"get",
				"get_collection"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/ankish/kaggle_data_science/kaggle-comp/django_app/new_django.md",
			"settings":
			{
				"buffer_size": 94,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "source app_django/new_django/bin/activate"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"markdow",
				"Snippet: Markdown Header 1"
			],
			[
				"mar",
				"Set Syntax: Markdown"
			],
			[
				"",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
			"Preferences.sublime-settings"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ankish/try_django",
		"/home/ankish/try_django/include",
		"/home/ankish/try_django/lib",
		"/home/ankish/try_django/src",
		"/home/ankish/try_django/src/products",
		"/home/ankish/try_django/src/try_django"
	],
	"file_history":
	[
		"/home/ankish/kaggle_data_science/kaggle-comp/django_app/angular_js.md",
		"/home/ankish/kaggle_data_science/kaggle-comp/django_app/run_django.md",
		"/home/ankish/try_django/src/products/admin.py",
		"/home/ankish/try_django/src/products/models.py",
		"/home/ankish/try_django/src/products/tests.py",
		"/home/ankish/try_django/src/try_django/settings.py",
		"/home/ankish/try_django/src/db.sqlite3",
		"/home/ankish/kaggle_data_science/mobilenetv2.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/Untitled Folder/mobilenet2.py",
		"/home/ankish/RL baseline+morvan+mine/morvan complete/contents/12_Proximal_Policy_Optimization/simply_PPO.py",
		"/home/ankish/git-commit-folder/c-plus-plus/geeks/replace_white_spaces.cpp",
		"/home/ankish/git-commit-folder/c-plus-plus/array_test.cpp",
		"/home/ankish/git-commit-folder/c-plus-plus/vector_test.cpp",
		"/home/ankish/git-commit-folder/c-plus-plus/geeks/extract_maximum.cpp",
		"/home/ankish/Desktop/HER-DDPG/Ankish/ankish_algo_test.py",
		"/home/ankish/Desktop/HER-DDPG/Ankish/run_my_algo.py",
		"/home/ankish/Desktop/c++/left_view_in_binary_tree_in_iterative_fashion.cpp",
		"/home/ankish/Desktop/c++/left_view_in_binary_tree.cpp",
		"/home/ankish/kaggle_data_science/kaggle-comp/web-scrapping/web_parser.py",
		"/home/ankish/.bashrc",
		"/home/ankish/mujoco-py/mujoco_py/utils.py",
		"/home/ankish/gym/gym/envs/registration.py",
		"/home/ankish/Desktop/c++/bfs_graph.cpp",
		"/home/ankish/Desktop/c++/dfs_graph.cpp",
		"/home/ankish/Desktop/c++/minimum_spanning_tree_prim_algo.cpp",
		"/home/ankish/Desktop/c++/dijkstra_algorithm.cpp",
		"/home/ankish/Desktop/c++/find_max_element_using_sliding_window.cpp",
		"/home/ankish/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/ankish/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/ankish/Desktop/HER-DDPG/Ankish/run_help.py",
		"/home/ankish/git-commit-folder/c-plus-plus/geeks/merge_two_strings.cpp",
		"/home/ankish/git-commit-folder/c-plus-plus/geeks/sorting_string_in_decreasing_order.cpp",
		"/home/ankish/git-commit-folder/ml-toolbox/python_hidden_or_unknown_fact_to_me.py",
		"/home/ankish/kaggle_data_science/copied_Keras CNN - StatOil Iceberg .py",
		"/home/ankish/kaggle_data_science/Keras CNN - StatOil Iceberg .py",
		"/home/ankish/kaggle_data_science/universal-model-keras.ipynb",
		"/home/ankish/kaggle_data_science/data-on-the-fly.py",
		"/home/ankish/kaggle_data_science/unet-keras.py",
		"/home/ankish/kaggle_data_science/target-encoding-noisy.py",
		"/home/ankish/kaggle_data_science/matplotlib_tut.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/gbm_hyperopt.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/eda_tool/eda_toolbox.py",
		"/home/ankish/git-commit-folder/ml-toolbox/tutorials/boosting_trees.md",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/memory_optimization.py",
		"/home/ankish/git-commit-folder/ml-toolbox/extra_imp/strategy-during-dog-adoption-comp/feature-interaction.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/gbm_model.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/utils.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/bayesian_optimization.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/categorical_encoding.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/LTS-loan-pred/imp-advice.py",
		"/home/ankish/git-commit-folder/hackerrank/rotation_of_array.cpp",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/keras_embedding_lstm.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/decision_trees_sklearn.py",
		"/home/ankish/git-commit-folder/ml-toolbox/extra_imp/h2o_1.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/h2o_model_details.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/linear_non_linear_models.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/pre_normalization.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/feature_transformation.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/club-mahindra/my_approach.md",
		"/home/ankish/kaggle_data_science/kaggle-comp/club-mahindra/readme.md",
		"/home/ankish/kaggle_data_science/kaggle-comp/club-mahindra/readme.txt",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/keras_layers_utils.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/keras_callbacks_exp.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/keras_lossfunc_metrics.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/entity_embedding.py",
		"/home/ankish/git-commit-folder/ml-toolbox/todays_task.md",
		"/home/ankish/git-commit-folder/ml-toolbox/README.md",
		"/home/ankish/kaggle_data_science/trees/xgboost.py",
		"/home/ankish/git-commit-folder/hackerrank_array",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/linear_models_sklearn.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/diff-way-of-encoding.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/target-encoding.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/target-encoding-nested-loop-xgboost(may-be-wrong).py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/set_random_seed_keras.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/LTS-loan-pred/imp-advice2.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/text_features_extraction.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/hyperopt_example.md",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/extra_material_keras_layers.py",
		"/tmp/mozilla_ankish0/entity-embedding-word2vec.py",
		"/home/ankish/git-commit-folder/ml-toolbox/readme-with-tick-marks.md",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/text_preprocessing.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/randomsearch-gridsearch-bayessearch.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/nice-reusuable-function.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/hyperopt_gbm.py",
		"/home/ankish/git-commit-folder/ml-toolbox/extra_imp/gbdt_hyperparameter_tuning.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/qwadratic-kappa-based-keras-model.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/grid_search_cv.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/complete-code-dog-adoption.py",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/hyperopt-again-better-mine.py",
		"/home/ankish/.config/sublime-text-3/Packages/User/Markdown (Standard).sublime-settings",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/gbm_catboost.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/gbm_lightgbm.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml_models/gbm_xgboost.py",
		"/home/ankish/git-commit-folder/ml-toolbox/tutorials/gbm",
		"/home/ankish/kaggle_data_science/kaggle-comp/strategy-during-dog-adoption-comp/extensive-text-preprocessing.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature_eng/outlier_handling.py",
		"/home/ankish/augmentation.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/augmentation_function.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/pretrained_model.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/deep_ml/architectures.py",
		"/home/ankish/lstm_attention/seq_to_seq/tf-rnn-attention-master/train.py",
		"/home/ankish/gan/condition_gan/conditional_gan_easy.py",
		"/home/ankish/python useful tips.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml-models/gbm-xgboost.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml-models/regularized-rf.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature-eng/outlier-handling.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/importing-module-anywhere.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature-eng/pre-normalization.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/feature-eng/standard-scaling.py",
		"/home/ankish/seismic_network.py",
		"/home/ankish/.config/sublime-text-3/Packages/MarkdownEditing/Markdown.sublime-settings",
		"/home/ankish/git-commit-folder/ml-toolbox/HomePage.md",
		"/home/ankish/git-commit-folder/ml-toolbox/src/import-package.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml-models/gbm-catboost.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml-models/gbm-lightgbm.py",
		"/home/ankish/git-commit-folder/ml-toolbox/src/ml-models/make-prediction.py",
		"/home/ankish/capsnet_mnist.py",
		"/home/ankish/basics_lstm_tensorflow.py",
		"/home/ankish/useful_lstm_implementation.py",
		"/home/ankish/python_basics_dict_list.py",
		"/home/ankish/deep mind/nalu deep mind/nalu.py",
		"/home/ankish/maching_network/new/util.py",
		"/home/ankish/maching_network/new/model.py",
		"/home/ankish/maching_network/new/main.py",
		"/home/ankish/meta learning/chelsa/maml-master/data_generator.py",
		"/home/ankish/gan_cycle/ebgan.py",
		"/home/ankish/deep mind/nalu.py",
		"/home/ankish/maching_network/new/data_load.py"
	],
	"find":
	{
		"height": 51.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"AUTHENTICATION_BACKENDS"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/ankish/kaggle_data_science/kaggle-comp/django_app/new_django.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94,
						"regions":
						{
						},
						"selection":
						[
							[
								94,
								94
							]
						],
						"settings":
						{
							"auto_name": "source app_django/new_django/bin/activate",
							"syntax": "Packages/MarkdownEditing/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "try_django.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 195.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
